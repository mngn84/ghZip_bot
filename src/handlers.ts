import { Context } from "grammy";
import { ZipParams } from "./interfaces";
import { sendZip } from "./services";

const activeInChat = new Map<number, boolean>();

export const handleStart = async (ctx: Context): Promise<void> => {
    if (ctx.chat) {
        activeInChat.set(ctx.chat.id, true);
        ctx.reply('–í–≤–µ–¥–∏—Ç–µ URL —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª.');
        setTimeout(() => {
            if (ctx.chat) {
                activeInChat.set(ctx.chat.id, false);
            }
        }, +(process.env.DEACT_DELAY ?? 15) * 1000);
    }
}
export const handleHelp = async (ctx: Context): Promise<void> => {
    ctx.reply(
        '–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n' +
        '/active_ghbot - –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –±–æ—Ç–∞ –≤–≤–æ–¥–∞ URL GitHub –∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞\n' +
        '/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–º–æ—â–∏\n\n' +
        `–ü–æ—Å–ª–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –±–æ—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ URL GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª –≤ —Ç–µ—á–µ–Ω–∏–µ ${process.env.DEACT_DELAY} —Å–µ–∫—É–Ω–¥.\n`
    );
}

export const handleURLMessage = async (ctx: Context): Promise<void> => {
    if (!ctx.chat || !ctx.msg) {
        return;
    }

    if (ctx.msg.text && activeInChat.get(ctx.chat.id)) {
        const text: string = ctx.msg.text;
        const [url, ...titleChars]: string[] = text.split(' ');
        const title: string = titleChars.join(' ');

        const [, , , owner, repo] = url.split('/');
        const args: ZipParams = {
            url,
            owner,
            repo,
            title,
            description: '',
        };

        try {
            await sendZip(ctx, args);
            await ctx.react('üëç');
        } catch (err) {
            ctx.reply('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∞—Ä—Ö–∏–≤–∞.');
            ctx.react('üò≠');
            throw err;
        } finally {
            activeInChat.set(ctx.chat.id, false);
        }
    }
}

